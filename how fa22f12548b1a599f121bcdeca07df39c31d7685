[33mcommit e6cdfe8413c84511173585ab31b71b02cbcd65d6[m
Author: Anthony Samuel <masamuel@zuelligpharma.com>
Date:   Fri May 2 12:17:16 2025 +0700

    asdonsdaio

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..e2bceb6[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,99 @@[m
[32m+[m[32m# Node modules and cache[m
[32m+[m[32mnode_modules/[m
[32m+[m[32m.cache/[m
[32m+[m[32m**/node_modules/[m
[32m+[m[32m**/.cache/[m
[32m+[m[32m**/default-development/[m
[32m+[m[32m**/node_modules/.cache/[m
[32m+[m[32mfrontend/node_modules/.cache/[m
[32m+[m[32mfrontend/node_modules/.cache/default-development/[m
[32m+[m[32m*.pack[m
[32m+[m
[32m+[m[32m# Build files[m
[32m+[m[32m/build/[m
[32m+[m[32m/dist/[m
[32m+[m[32mfrontend/build/[m
[32m+[m[32mbackend/build/[m
[32m+[m
[32m+[m[32m# Dependencies[m
[32m+[m[32m/node_modules[m
[32m+[m[32m**/node_modules[m
[32m+[m[32m**/node_modules/.cache[m
[32m+[m[32m**/.cache[m
[32m+[m
[32m+[m[32m# Development cache[m
[32m+[m[32m.cache[m
[32m+[m[32m**/.cache/[m
[32m+[m[32m**/default-development/[m
[32m+[m[32mfrontend/.cache/[m
[32m+[m[32mbackend/.cache/[m
[32m+[m[32mfrontend/node_modules/.cache/[m
[32m+[m[32mbackend/node_modules/.cache/[m
[32m+[m[32mfrontend/node_modules/.cache/default-development/*.pack[m
[32m+[m[32m**/node_modules/.cache/**/*.pack[m
[32m+[m
[32m+[m[32m# Build directories[m
[32m+[m[32m/dist[m
[32m+[m[32m/build[m
[32m+[m[32m**/dist[m
[32m+[m[32m**/build[m
[32m+[m
[32m+[m[32m# Cache directories (comprehensive list)[m
[32m+[m[32m.cache/[m
[32m+[m[32m**/.cache/[m
[32m+[m[32m**/default-development/[m
[32m+[m[32mfrontend/.cache/[m
[32m+[m[32mbackend/.cache/[m
[32m+[m[32m**/node_modules/.cache/[m
[32m+[m[32mfrontend/node_modules/.cache/[m
[32m+[m[32mbackend/node_modules/.cache/[m
[32m+[m[32mfrontend/node_modules/.cache/default-development/[m
[32m+[m[32m**/node_modules/.cache/**/*.pack[m
[32m+[m[32m**/node_modules/.cache/**/*[m
[32m+[m
[32m+[m[32m# Production build files[m
[32m+[m[32mfrontend/build/[m
[32m+[m[32mbackend/build/[m
[32m+[m
[32m+[m[32m# Environment files[m
[32m+[m[32m.env[m
[32m+[m[32m.env.local[m
[32m+[m[32m.env.development[m
[32m+[m[32m.env.test[m
[32m+[m[32m.env.production[m
[32m+[m
[32m+[m[32m# Log files[m
[32m+[m[32mnpm-debug.log*[m
[32m+[m[32myarn-debug.log*[m
[32m+[m[32myarn-error.log*[m
[32m+[m[32mlogs/[m
[32m+[m[32m*.log[m
[32m+[m
[32m+[m[32m# Editor directories and files[m
[32m+[m[32m.idea/[m
[32m+[m[32m.vscode/[m
[32m+[m[32m*.swp[m
[32m+[m[32m*.swo[m
[32m+[m[32m*.sublime-workspace[m
[32m+[m[32m*.sublime-project[m
[32m+[m
[32m+[m[32m# OS generated files[m
[32m+[m[32m.DS_Store[m
[32m+[m[32m.DS_Store?[m
[32m+[m[32m._*[m
[32m+[m[32m.Spotlight-V100[m
[32m+[m[32m.Trashes[m
[32m+[m[32mehthumbs.db[m
[32m+[m[32mThumbs.db[m
[32m+[m
[32m+[m[32m# Temp files[m
[32m+[m[32m*.tmp[m
[32m+[m[32m*.temp[m
[32m+[m[32mtemp/[m
[32m+[m[32mtmp/[m
[32m+[m
[32m+[m[32m# Uploads directory - ignore contents but keep directory[m
[32m+[m[32m/uploads/*[m
[32m+[m[32m!/uploads/.gitkeep[m
[32m+[m[32m.vercel[m
[32m+[m[32m.env*.local[m
[1mdiff --git a/config/database.js b/config/database.js[m
[1mnew file mode 100644[m
[1mindex 0000000..aea592b[m
[1m--- /dev/null[m
[1m+++ b/config/database.js[m
[36m@@ -0,0 +1,184 @@[m
[32m+[m[32mconst mongoose = require('mongoose');[m
[32m+[m[32mconst bcrypt = require('bcryptjs');[m
[32m+[m
[32m+[m[32mlet retryCount = 0;[m
[32m+[m[32mconst MAX_RETRIES = 5;[m
[32m+[m[32mconst RETRY_DELAY = 5000;[m
[32m+[m[32mlet isConnecting = false;[m
[32m+[m
[32m+[m[32mconst connectDB = async () => {[m
[32m+[m[32m  try {[m
[32m+[m[32m    // Prevent multiple connection attempts[m
[32m+[m[32m    if (isConnecting) {[m
[32m+[m[32m      console.log('[MongoDB] Connection already in progress...');[m
[32m+[m[32m      return null;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (!process.env.MONGODB_URL) {[m
[32m+[m[32m      throw new Error('MONGODB_URL environment variable is not set');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    isConnecting = true;[m
[32m+[m
[32m+[m[32m    const options = {[m
[32m+[m[32m      useNewUrlParser: true,[m
[32m+[m[32m      useUnifiedTopology: true,[m
[32m+[m[32m      serverSelectionTimeoutMS: 5000, // Further reduced for serverless[m
[32m+[m[32m      socketTimeoutMS: 10000, // Further reduced for serverless[m
[32m+[m[32m      keepAlive: false, // Disabled for serverless[m
[32m+[m[32m      dbName: 'aplnatlog-backend',[m
[32m+[m[32m      retryWrites: true,[m
[32m+[m[32m      w: 'majority',[m
[32m+[m[32m      ssl: process.env.NODE_ENV === 'production',[m
[32m+[m[32m      autoIndex: false,[m
[32m+[m[32m      connectTimeoutMS: 5000,[m
[32m+[m[32m      maxPoolSize: 1, // Minimum for serverless[m
[32m+[m[32m      family: 4 // Force IPv4[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    // Remove any existing listeners to prevent memory leaks[m
[32m+[m[32m    mongoose.connection.removeAllListeners();[m
[32m+[m
[32m+[m[32m    // Set up connection listeners[m
[32m+[m[32m    mongoose.connection.once('connecting', () => {[m
[32m+[m[32m      console.log('[MongoDB] Connecting to database...');[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    mongoose.connection.once('connected', () => {[m
[32m+[m[32m      console.log('[MongoDB] Connected successfully');[m
[32m+[m[32m      retryCount = 0;[m
[32m+[m[32m      isConnecting = false;[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    mongoose.connection.once('disconnected', () => {[m
[32m+[m[32m      console.log('[MongoDB] Disconnected from database');[m
[32m+[m[32m      isConnecting = false;[m
[32m+[m[32m      // Only attempt reconnect if not shutting down[m
[32m+[m[32m      if (process.env.NODE_ENV === 'production' && retryCount < MAX_RETRIES) {[m
[32m+[m[32m        handleConnectionError();[m
[32m+[m[32m      }[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    mongoose.connection.on('error', (err) => {[m
[32m+[m[32m      console.error('[MongoDB] Connection error:', err.message);[m
[32m+[m[32m      isConnecting = false;[m
[32m+[m[32m      if (retryCount < MAX_RETRIES) {[m
[32m+[m[32m        handleConnectionError();[m
[32m+[m[32m      }[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    console.log(`[MongoDB] Connecting... (Attempt ${retryCount + 1}/${MAX_RETRIES})`);[m
[32m+[m[41m    [m
[32m+[m[32m    const conn = await mongoose.connect(process.env.MONGODB_URL, options);[m
[32m+[m
[32m+[m[32m    // Initialize collections if they don't exist[m
[32m+[m[32m    const collections = await mongoose.connection.db.listCollections().toArray();[m
[32m+[m[32m    const collectionNames = collections.map(c => c.name);[m
[32m+[m
[32m+[m[32m    // Create users collection if it doesn't exist[m
[32m+[m[32m    if (!collectionNames.includes('users')) {[m
[32m+[m[32m      console.log('[MongoDB] Creating users collection...');[m
[32m+[m[32m      await mongoose.connection.db.createCollection('users', {[m
[32m+[m[32m        validator: {[m
[32m+[m[32m          $jsonSchema: {[m
[32m+[m[32m            bsonType: "object",[m
[32m+[m[32m            required: ["username", "password", "role"],[m
[32m+[m[32m            properties: {[m
[32m+[m[32m              username: {[m
[32m+[m[32m                bsonType: "string",[m
[32m+[m[32m                description: "must be a string and is required"[m
[32m+[m[32m              },[m
[32m+[m[32m              password: {[m
[32m+[m[32m                bsonType: "string",[m
[32m+[m[32m                description: "must be a string and is required"[m
[32m+[m[32m              },[m
[32m+[m[32m         